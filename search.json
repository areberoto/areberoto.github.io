[
  {
    "objectID": "posts/2024/welcome/index.html",
    "href": "posts/2024/welcome/index.html",
    "title": "Getting back to it, starting from the basics of ML!",
    "section": "",
    "text": "First of all, welcome to my new personal blog, where I will share with you very interesting topics about AI/ML, programming and embedded systems üòÑ."
  },
  {
    "objectID": "posts/2024/welcome/index.html#conclusion",
    "href": "posts/2024/welcome/index.html#conclusion",
    "title": "Getting back to it, starting from the basics of ML!",
    "section": "Conclusion",
    "text": "Conclusion\nI‚Äôm starting my AI/ML learning path from scratch again and I will document part of it in this blog. Come join me in this adventure! Looking forward to it! üíªüíØ"
  },
  {
    "objectID": "edge-ai.html",
    "href": "edge-ai.html",
    "title": "Edge AI",
    "section": "",
    "text": "Artificial Intelligence and Machine Learning\nMachine Learning at the Edge\n\nOptimization methods for ML deployment in edge devices\n\nEmbedded Linux & systems\nProgramming, most probably using Python and C/C++"
  },
  {
    "objectID": "edge-ai.html#some-of-the-topics-you-will-find-in-this-blog",
    "href": "edge-ai.html#some-of-the-topics-you-will-find-in-this-blog",
    "title": "Edge AI",
    "section": "",
    "text": "Artificial Intelligence and Machine Learning\nMachine Learning at the Edge\n\nOptimization methods for ML deployment in edge devices\n\nEmbedded Linux & systems\nProgramming, most probably using Python and C/C++"
  },
  {
    "objectID": "ai-ml.html",
    "href": "ai-ml.html",
    "title": "AI/ML",
    "section": "",
    "text": "Artificial Intelligence and Machine Learning\nMachine Learning at the Edge\n\nOptimization methods for ML deployment in edge devices\n\nEmbedded Linux & systems\nProgramming, most probably using Python and C/C++"
  },
  {
    "objectID": "ai-ml.html#some-of-the-topics-you-will-find-in-this-blog",
    "href": "ai-ml.html#some-of-the-topics-you-will-find-in-this-blog",
    "title": "AI/ML",
    "section": "",
    "text": "Artificial Intelligence and Machine Learning\nMachine Learning at the Edge\n\nOptimization methods for ML deployment in edge devices\n\nEmbedded Linux & systems\nProgramming, most probably using Python and C/C++"
  },
  {
    "objectID": "embedded-linux.html",
    "href": "embedded-linux.html",
    "title": "Embedded Linux",
    "section": "",
    "text": "Artificial Intelligence and Machine Learning\nMachine Learning at the Edge\n\nOptimization methods for ML deployment in edge devices\n\nEmbedded Linux & systems\nProgramming, most probably using Python and C/C++"
  },
  {
    "objectID": "embedded-linux.html#some-of-the-topics-you-will-find-in-this-blog",
    "href": "embedded-linux.html#some-of-the-topics-you-will-find-in-this-blog",
    "title": "Embedded Linux",
    "section": "",
    "text": "Artificial Intelligence and Machine Learning\nMachine Learning at the Edge\n\nOptimization methods for ML deployment in edge devices\n\nEmbedded Linux & systems\nProgramming, most probably using Python and C/C++"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! I‚Äôm Alberto, a software engineer working with AI/ML and programming for embedded systems üíª. Come join me in my learning path of these amazing fields and let‚Äôs discover together new techonlogies and ways to code! Oh, and I also like to take photos üì∏, so you might find some of my pics throughout the blog from now and then. I hope you enjoy it!"
  },
  {
    "objectID": "posts/2024/basics-ai-ml/index.html",
    "href": "posts/2024/basics-ai-ml/index.html",
    "title": "Brief introduction to AI/ML",
    "section": "",
    "text": "In today‚Äôs world, hearing about Artificial Intelligence (AI) in a daily conversation is not uncommon. We hear about it everywhere and everyone wants to talk about it, even if they have no real clue of how it works or what it really is. Some even say it will take over humanity very soon üëÄ.\nThere is another field that is unlikely to hear in daily conversations, but which is very tightly related to AI: Machine Learning (ML). There are many different definitions of what machine learning is, but let‚Äôs look at the following one to keep it simple:\n\n‚ÄúField of study that gives computers the ability to learn without being explicitly programmed‚Äù - Arthur Samuel (1959).\n\nThat is a very informal definition. Briefly, machine learning is the process in which a computer learns how to do a task or how to solve a problem. The rules have not been explicitly programmed by the human, instead found by the machine during its training process.\n\n\nThere are three main types of ML, which we briefly explain below:\n\nSupervised learning: the machine learns from a given dataset that contains the right answers, thus the name ‚Äòsupervised‚Äô.\nUnsupervised learning: The machine doesn‚Äôt know anything about the expected output, but tries to learn/find patterns in the data that can be later used to solve a task. Some example algorithms are:\n\nClustering\nAnomaly Detection\nDimensionality reduction\n\nReinforcement learning: The machine learns by trial and error. Good examples for this are games, that a computer learns how to play by trial and error until it becomes very good at it.\n\n\n\n\nAlso, is important to differenciate a regression model from a classification model:\n\nRegression model: Predicts values, such as house prices or temperature. These values are numbers like $250,000.00, 23.7 ¬∞C, etc. Infinitely many possible outputs.\n\n\n\n\n\n\nflowchart LR\n  A(Input features) --&gt; B(Regression model)\n  B --&gt; C(Predicted value)\n\n\n\n\n\n\n\nClassification model: predicts classes or categories, such as a picture representing a ‚Äúcat‚Äù or a ‚Äúdog‚Äù. Discrete or finite set of possible outputs.\n\n\n\n\n\n\nflowchart LR\n  A(Input image) --&gt; B(Classification model)\n  B --&gt; C(Class 1)\n  B --&gt; D(Class 2)\n\n\n\n\n\n\n\n\n\n\nTraining dataset: Data used to train the model, i.e., fed to the algorithm for it to learn the rules to predict the outputs.\nValidation dataset: Used to validate the trained model and evaluate the accuracy of prediction. It helps determine if the model is good at predicting outputs from unseen data. If not, more training is required, or a bigger training data.\nTest dataset: Data used to test the model after trained and validated, to confirm real accuracy of model.\n\n\n\n\n\n\n\nDeepLearning.AI - Machine Learning Specialization\n\n\n\nSometimes validation dataset and test dataset are used as one."
  },
  {
    "objectID": "posts/2024/basics-ai-ml/index.html#types-of-machine-learning",
    "href": "posts/2024/basics-ai-ml/index.html#types-of-machine-learning",
    "title": "Brief introduction to AI/ML",
    "section": "",
    "text": "There are three main types of ML, which we briefly explain below:\n\nSupervised learning: the machine learns from a given dataset that contains the right answers, thus the name ‚Äòsupervised‚Äô.\nUnsupervised learning: The machine doesn‚Äôt know anything about the expected output, but tries to learn/find patterns in the data that can be later used to solve a task. Some example algorithms are:\n\nClustering\nAnomaly Detection\nDimensionality reduction\n\nReinforcement learning: The machine learns by trial and error. Good examples for this are games, that a computer learns how to play by trial and error until it becomes very good at it."
  },
  {
    "objectID": "posts/2024/basics-ai-ml/index.html#regression-vs-classification",
    "href": "posts/2024/basics-ai-ml/index.html#regression-vs-classification",
    "title": "Brief introduction to AI/ML",
    "section": "",
    "text": "Also, is important to differenciate a regression model from a classification model:\n\nRegression model: Predicts values, such as house prices or temperature. These values are numbers like $250,000.00, 23.7 ¬∞C, etc. Infinitely many possible outputs.\n\n\n\n\n\n\nflowchart LR\n  A(Input features) --&gt; B(Regression model)\n  B --&gt; C(Predicted value)\n\n\n\n\n\n\n\nClassification model: predicts classes or categories, such as a picture representing a ‚Äúcat‚Äù or a ‚Äúdog‚Äù. Discrete or finite set of possible outputs.\n\n\n\n\n\n\nflowchart LR\n  A(Input image) --&gt; B(Classification model)\n  B --&gt; C(Class 1)\n  B --&gt; D(Class 2)"
  },
  {
    "objectID": "posts/2024/basics-ai-ml/index.html#terminology",
    "href": "posts/2024/basics-ai-ml/index.html#terminology",
    "title": "Brief introduction to AI/ML",
    "section": "",
    "text": "Training dataset: Data used to train the model, i.e., fed to the algorithm for it to learn the rules to predict the outputs.\nValidation dataset: Used to validate the trained model and evaluate the accuracy of prediction. It helps determine if the model is good at predicting outputs from unseen data. If not, more training is required, or a bigger training data.\nTest dataset: Data used to test the model after trained and validated, to confirm real accuracy of model.\n\n\n\n\n\n\n\nDeepLearning.AI - Machine Learning Specialization\n\n\n\nSometimes validation dataset and test dataset are used as one."
  },
  {
    "objectID": "posts/2024/basics-ai-ml/index.html#linear-regression",
    "href": "posts/2024/basics-ai-ml/index.html#linear-regression",
    "title": "Brief introduction to AI/ML",
    "section": "Linear regression",
    "text": "Linear regression\nI‚Äôm sure you have heard about linear regression, a very simple algorithm that fits a straight line to a given data. This algorithm belongs to supervised learning, since it uses available data to fit the line, which then can be used to predict a value (even though not very accurate). Mathematically, this algorithm is as simple as below:\n\\[\nf_{w,b}(x) = wx+b\n\\]\nSo yes, you know at least one learning algorithm, and it is very simple!\n\nExample\nWe have the prices for two houses: a small one (900 sqft) and a big one (1,450 sqft). The small one costs $150,000.00 and the big one $280,000.00. We would like to predict the price of a medium size house (1,050 sqft).\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = [900, 1450]\ny = [150000, 280000]\n\nfig, ax = plt.subplots()\nplt.title(\"Housing Prices\")\nplt.scatter(x, y, marker='x', c='r')\nplt.show()"
  }
]